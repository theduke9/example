{"version":3,"sources":["Login.js","Register.js","Loginscreen.js","component/MainComponent.jsx","component/DashboardComponent.jsx","App.js","component/TopMenuComponent.jsx","serviceWorker.js","index.js"],"names":["Login","props","localloginComponent","push","ThemeProvider","key","TextField","hintText","floatingLabelText","onChange","event","newValue","setState","username","type","password","Button","label","primary","style","onClick","handleClick","state","menuValue","loginComponent","loginRole","undefined","this","role","console","log","payload","axios","post","apiBaseUrl","then","response","data","code","alert","success","catch","error","value","AppBar","title","Select","index","handleMenuChange","MenuItem","primaryText","Component","margin","Register","first_name","last_name","email","nextProps","self","length","loginscreen","parentContext","appContext","loginmessage","buttonLabel","isLogin","userhintText","userLabel","Loginscreen","loginButtons","studentbuttonLabel","teacherbuttonLabel","userRole","className","MainComponent","getApi","get","res","message","DashboardComponent","App","loginPage","uploadScreen","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.648d3f5e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport axios from 'axios';\n\nvar apiBaseUrl = \"http://localhost:8080/api/\";\n\n//import UploadPage from './UploadPage';\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    var localloginComponent=[];\n    localloginComponent.push(\n      <ThemeProvider key={\"theme\"}>\n        <div>\n         <TextField\n           hintText=\"Enter your College Rollno\"\n           floatingLabelText=\"Student Id\"\n           onChange={(event,newValue) => this.setState({username:newValue})}\n           />\n         <br/>\n           <TextField\n             type=\"password\"\n             hintText=\"Enter your Password\"\n             floatingLabelText=\"Password\"\n             onChange = {(event,newValue) => this.setState({password:newValue})}\n             />\n           <br/>\n           <Button label=\"Submit\" primary={true} style={style} onClick={(event) => this.handleClick(event)}/>\n       </div>\n       </ThemeProvider>\n    )\n    this.state={\n      username:'',\n      password:'',\n      menuValue:1,\n      loginComponent:localloginComponent,\n      loginRole:'student'\n    }\n  }\n  componentWillMount(){\n  // console.log(\"willmount prop values\",this.props);\n  if(this.props.role != undefined){\n    if(this.props.role == 'student'){\n      console.log(\"in student componentWillMount\");\n      var localloginComponent=[];\n      localloginComponent.push(\n        <ThemeProvider>\n          <div>\n           <TextField\n             hintText=\"Enter your College Rollno\"\n             floatingLabelText=\"Student Id\"\n             onChange = {(event,newValue) => this.setState({username:newValue})}\n             />\n           <br/>\n             <TextField\n               type=\"password\"\n               hintText=\"Enter your Password\"\n               floatingLabelText=\"Password\"\n               onChange = {(event,newValue) => this.setState({password:newValue})}\n               />\n             <br/>\n             <Button label=\"Submit\" primary={true} style={style} onClick={(event) => this.handleClick(event)}/>\n         </div>\n         </ThemeProvider>\n      )\n      this.setState({menuValue:1,loginComponent:localloginComponent,loginRole:'student'})\n    }\n    else if(this.props.role == 'teacher'){\n      console.log(\"in teacher componentWillMount\");\n      var localloginComponent=[];\n      localloginComponent.push(\n        <ThemeProvider>\n          <div>\n           <TextField\n             hintText=\"Enter your College Rollno\"\n             floatingLabelText=\"Teacher Id\"\n             onChange={(event,newValue) => this.setState({username:newValue})}\n             />\n           <br/>\n             <TextField\n               type=\"password\"\n               hintText=\"Enter your Password\"\n               floatingLabelText=\"Password\"\n               onChange={(event,newValue) => this.setState({password:newValue})}\n               />\n             <br/>\n             <Button label=\"Submit\" primary={true} style={style} onClick={(event) => this.handleClick(event)}/>\n         </div>\n         </ThemeProvider>\n      )\n      this.setState({menuValue:2,loginComponent:localloginComponent,loginRole:'teacher'})\n    }\n  }\n  }\n  handleClick(event){\n    var self = this;\n    var payload={\n      \"userid\":this.state.username,\n\t    \"password\":this.state.password,\n      \"role\":this.state.loginRole\n    }\n    axios.post(apiBaseUrl+'login', payload)\n   .then(function (response) {\n     console.log(response);\n     if(response.data.code == 200){\n       console.log(\"Login successfull\");\n/*\n       var uploadScreen=[];\n       uploadScreen.push(<UploadPage appContext={self.props.appContext} role={self.state.loginRole}/>)\n       self.props.appContext.setState({loginPage:[],uploadScreen:uploadScreen})\n*/\n\n     }\n     else if(response.data.code == 204){\n       console.log(\"Username password do not match\");\n       alert(response.data.success)\n     }\n     else{\n       console.log(\"Username does not exists\");\n       alert(\"Username does not exist\");\n     }\n   })\n   .catch(function (error) {\n     console.log(error);\n   });\n  }\n  handleMenuChange(value){\n    console.log(\"menuvalue\",value);\n    var loginRole;\n    if(value==1){\n      var localloginComponent=[];\n      loginRole='student';\n      localloginComponent.push(\n        <ThemeProvider>\n          <div>\n           <TextField\n             hintText=\"Enter your College Rollno\"\n             floatingLabelText=\"Student Id\"\n             onChange = {(event,newValue) => this.setState({username:newValue})}\n             />\n           <br/>\n             <TextField\n               type=\"password\"\n               hintText=\"Enter your Password\"\n               floatingLabelText=\"Password\"\n               onChange = {(event,newValue) => this.setState({password:newValue})}\n               />\n             <br/>\n             <Button label=\"Submit\" primary={true} style={style} onClick={(event) => this.handleClick(event)}/>\n         </div>\n         </ThemeProvider>\n      )\n    }\n    else if(value == 2){\n      var localloginComponent=[];\n      loginRole='teacher';\n      localloginComponent.push(\n        <ThemeProvider>\n          <div>\n           <TextField\n             hintText=\"Enter your College Rollno\"\n             floatingLabelText=\"Teacher Id\"\n             onChange = {(event,newValue) => this.setState({username:newValue})}\n             />\n           <br/>\n             <TextField\n               type=\"password\"\n               hintText=\"Enter your Password\"\n               floatingLabelText=\"Password\"\n               onChange = {(event,newValue) => this.setState({password:newValue})}\n               />\n             <br/>\n             <Button label=\"Submit\" primary={true} style={style} onClick={(event) => this.handleClick(event)}/>\n         </div>\n         </ThemeProvider>\n      )\n    }\n    this.setState({menuValue:value,\n                   loginComponent:localloginComponent,\n                   loginRole:loginRole})\n  }\n  render() {\n    return (\n      <div>\n        <ThemeProvider>\n        <AppBar\n             title=\"Login\"\n           />\n        </ThemeProvider>\n        <ThemeProvider>\n        <div>\n        <p>Login as:</p>\n        <Select value={this.state.menuValue} onChange={(event,index,value)=>this.handleMenuChange(value)}>\n          <MenuItem value={1} primaryText=\"Student\" />\n          <MenuItem value={2} primaryText=\"Teacher\" />\n        </Select>\n        </div>\n        </ThemeProvider>\n        {this.state.loginComponent}\n      </div>\n    );\n  }\n}\n\nconst style = {\n  margin: 15,\n};\n\nexport default Login;\n","import React, { Component } from 'react';\nimport MuiThemeProvider from '@material-ui/styles/ThemeProvider';\nimport AppBar from '@material-ui/core/AppBar';\nimport RaisedButton from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport Login from './Login';\n\nclass Register extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      first_name:'',\n      last_name:'',\n      email:'',\n      password:''\n    }\n  }\n  componentWillReceiveProps(nextProps){\n    console.log(\"nextProps\",nextProps);\n  }\n  handleClick(event,role){\n    var apiBaseUrl = \"http://localhost:4000/api/\";\n    // console.log(\"values in register handler\",role);\n    var self = this;\n    //To be done:check for empty values before hitting submit\n    if(this.state.first_name.length>0 && this.state.last_name.length>0 && this.state.email.length>0 && this.state.password.length>0){\n      var payload={\n      \"first_name\": this.state.first_name,\n      \"last_name\":this.state.last_name,\n      \"userid\":this.state.email,\n      \"password\":this.state.password,\n      \"role\":role\n      }\n      axios.post(apiBaseUrl+'/register', payload)\n     .then(function (response) {\n       console.log(response);\n       if(response.data.code === 200){\n        //  console.log(\"registration successfull\");\n         var loginscreen=[];\n         loginscreen.push(<Login parentContext={this} appContext={self.props.appContext} role={role}/>);\n         var loginmessage = \"Not Registered yet.Go to registration\";\n         self.props.parentContext.setState({loginscreen:loginscreen,\n         loginmessage:loginmessage,\n         buttonLabel:\"Register\",\n         isLogin:true\n          });\n       }\n       else{\n         console.log(\"some error ocurred\",response.data.code);\n       }\n     })\n     .catch(function (error) {\n       console.log(error);\n     });\n    }\n    else{\n      alert(\"Input field value is missing\");\n    }\n\n  }\n  render() {\n    // console.log(\"props\",this.props);\n    var userhintText,userLabel;\n    if(this.props.role === \"student\"){\n      userhintText=\"Enter your Student Id\";\n      userLabel=\"Student Id\";\n    }\n    else{\n      userhintText=\"Enter your Teacher Id\";\n      userLabel=\"Teacher Id\";\n    }\n    return (\n      <div>\n        <MuiThemeProvider>\n          <div>\n          <AppBar\n             title=\"Register\"\n           />\n           <TextField\n             hintText=\"Enter your First Name\"\n             floatingLabelText=\"First Name\"\n             onChange = {(event,newValue) => this.setState({first_name:newValue})}\n             />\n           <br/>\n           <TextField\n             hintText=\"Enter your Last Name\"\n             floatingLabelText=\"Last Name\"\n             onChange = {(event,newValue) => this.setState({last_name:newValue})}\n             />\n           <br/>\n           <TextField\n             hintText={userhintText}\n             floatingLabelText={userLabel}\n             onChange = {(event,newValue) => this.setState({email:newValue})}\n             />\n           <br/>\n           <TextField\n             type = \"password\"\n             hintText=\"Enter your Password\"\n             floatingLabelText=\"Password\"\n             onChange = {(event,newValue) => this.setState({password:newValue})}\n             />\n           <br/>\n           <RaisedButton label=\"Submit\" primary={true} style={style} onClick={(event) => this.handleClick(event,this.props.role)}/>\n          </div>\n         </MuiThemeProvider>\n      </div>\n    );\n  }\n}\n\nconst style = {\n  margin: 15,\n};\n\nexport default Register;\n","import React, { Component } from 'react';\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\nimport Button from '@material-ui/core/Button';\n\nimport Login from './Login';\nimport Register from './Register';\n\nconst style = {\n  margin: 15,\n};\n\nclass Loginscreen extends Component {\n  constructor(props){\n    super(props);\n    var loginButtons=[];\n    loginButtons.push(\n      <div key={\"Login-Div\"}>\n      <ThemeProvider>\n        <div>\n           <Button label={\"Register as Student\"} primary={true} style={style} onClick={(event) => this.handleClick(event,'student')}/>\n       </div>\n       </ThemeProvider>\n       <ThemeProvider>\n       <div>\n          <Button label={\"Register as Teacher\"} primary={true} style={style} onClick={(event) => this.handleClick(event,'teacher')}/>\n      </div>\n      </ThemeProvider>\n      </div>\n    )\n    this.state={\n      username:'',\n      password:'',\n      loginscreen:[],\n      loginmessage:'',\n      loginButtons:loginButtons,\n      studentbuttonLabel:'Register as Student',\n      teacherbuttonLabel:'Register as Teacher',\n      isLogin:true\n    }\n  }\n  componentWillMount(){\n    var loginscreen=[];\n    loginscreen.push(<Login parentContext={this} appContext={this.props.appContext} key={\"LoginScreen\"}/>);\n    var loginmessage = \"Not registered yet, Register Now\";\n    this.setState({\n                  loginscreen:loginscreen,\n                  loginmessage:loginmessage\n                    })\n  }\n  handleClick(event,userRole){\n    console.log(\"event\",userRole);\n    var loginmessage;\n    if(this.state.isLogin){\n      let loginscreen=[];\n      loginscreen.push(<Register parentContext={this} appContext={this.props.appContext} role={userRole}/>);\n      loginmessage = \"Already registered.Go to Login\";\n      let loginButtons=[];\n      loginButtons.push(\n        <div key=\"login-button\">\n        <ThemeProvider>\n          <div>\n             <Button label={\"Login\"} primary={true} style={style} onClick={(event) => this.handleClick(event,userRole)}/>\n         </div>\n         </ThemeProvider>\n        </div>\n      )\n      this.setState({\n                     loginscreen:loginscreen,\n                     loginmessage:loginmessage,\n                     loginButtons:loginButtons,\n                     isLogin:false\n                   })\n    }\n    else{\n      let loginscreen=[],loginButtons=[];\n      loginButtons.push(\n        <div>\n        <ThemeProvider>\n          <div>\n             <Button label={\"Register as Student\"} primary={true} style={style} onClick={(event) => this.handleClick(event,'student')}/>\n         </div>\n         </ThemeProvider>\n         <ThemeProvider>\n         <div>\n            <Button label={\"Register as Teacher\"} primary={true} style={style} onClick={(event) => this.handleClick(event,'teacher')}/>\n        </div>\n        </ThemeProvider>\n        </div>\n      )\n      loginscreen.push(<Login parentContext={this} appContext={this.props.appContext} role={userRole}/>);\n      loginmessage = \"Not Registered yet.Go to registration\";\n      this.setState({\n                     loginscreen:loginscreen,\n                     loginmessage:loginmessage,\n                     loginButtons:loginButtons,\n                     isLogin:true\n                   })\n    }\n  }\n  render() {\n    return (\n      <div className=\"loginscreen\" key=\"loginscreen\">\n        {this.state.loginscreen}\n        <div>\n          {this.state.loginmessage}\n          {this.state.loginButtons}\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default Loginscreen;\n","import React, {Component} from \"react\";\nimport axios from \"axios\";\n\nclass MainComponent extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            message: \"\"\n        }\n    }\n\n    componentDidMount() {\n        this.getApi();\n    }\n\n    getApi = () => {\n        axios.get(\"http://localhost:8080/example\")\n            .then(res => {\n                console.log(res);\n                this.setState({\n                    message: res.data.message\n                })\n            })\n            .catch(res => console.log(res))\n    }\n\n    render() {\n        return(\n            <div>\n                Main 페이지\n                <br/>\n                {this.state.message}\n            </div>\n        )\n    }\n}\n\nexport default MainComponent","import React, {Component} from \"react\";\n\n\nclass DashboardComponent extends Component {\n    render() {\n        return(\n            <div>\n                Dashboard 페이지\n            </div>\n        )\n    }\n}\n\nexport default DashboardComponent","//import React from 'react';\nimport React, { Component } from 'react';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport LoginScreen from './Loginscreen';\nimport TopMenuComponent from \"./component/TopMenuComponent\";\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state={\n      loginPage:[],\n      uploadScreen:[]\n    }\n  }\n  componentWillMount(){\n    var loginPage =[];\n    loginPage.push(<LoginScreen appContext={this} key={\"login-screen\"}/>);\n    this.setState({\n                  loginPage:loginPage\n                    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.loginPage}\n        {this.state.uploadScreen}\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, {Component} from \"react\";\nimport {Navbar} from \"react-bootstrap\";\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\n\nimport MainComponent from './MainComponent'\nimport DashboardComponent from './DashboardComponent'\n\nclass TopMenuComponent extends Component {\n    render() {\n        return (\n            <Router>\n                <Navbar\n                    bg=\"dark\"\n                    variant=\"dark\"\n                    className=\"mb-4\" >\n                    <Navbar.Brand href=\"/\">\n                        Home\n                    </Navbar.Brand>\n                    <Navbar.Brand href=\"/main\">\n                        Main\n                    </Navbar.Brand>\n                    <Navbar.Brand href=\"/dashboard\">\n                        Dashboard\n                    </Navbar.Brand>\n                </Navbar>\n\n                <Route path=\"/main\" component={MainComponent} />\n                <Route path=\"/dashboard\" component={DashboardComponent} />\n                <Route path=\"/SignUp\" component={DashboardComponent} />\n            </Router>\n        )\n    }\n}\n\nexport default TopMenuComponent;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}